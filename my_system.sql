/*
Navicat MySQL Data Transfer

Source Server         : mySQL
Source Server Version : 80011
Source Host           : localhost:3306
Source Database       : my_system

Target Server Type    : MYSQL
Target Server Version : 80011
File Encoding         : 65001

Date: 2019-01-05 13:05:11
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for `article_message`
-- ----------------------------
DROP TABLE IF EXISTS `article_message`;
CREATE TABLE `article_message` (
  `message_id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '文章留言id(自增)',
  `message_writer_id` int(10) NOT NULL COMMENT '留言者id',
  `message_writer_name` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `msg_for_article_id` varchar(30) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '闁伙絾鐟ㄩ埢鍫ュ礃閸涱収鍟?',
  `msg_content` text CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `msg_state` enum('1','0') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '1' COMMENT '鐣欒█鐘舵€?锛氬凡鐣欒█ 0锛氬凡鍒犻櫎鐣欒█',
  `msg_update_time` timestamp NULL DEFAULT NULL COMMENT '閻ｆ瑨鈻堥弮鍫曟？',
  PRIMARY KEY (`message_id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of article_message
-- ----------------------------
INSERT INTO `article_message` VALUES ('1', '123456', 'admin', '8SUK21260820181214eiGr', '这是第一条的回复\n这是第一条的回复', '1', '2018-12-18 17:09:07');
INSERT INTO `article_message` VALUES ('2', '123456', 'admin', '8SUK21260820181214eiGr', '这是第二条回复\n这是第二条回复\n这是第二条回复', '1', '2018-12-18 17:13:37');
INSERT INTO `article_message` VALUES ('3', '123456', 'admin', '8SUK21260820181214eiGr', '这是第三条回复\n这是第三条回复\n这是第三条回复\n这是第三条回复', '1', '2018-12-18 20:42:57');
INSERT INTO `article_message` VALUES ('4', '123474', 'admin1234', '8SUK21260820181214eiGr', '这是第四条回复 这是第四条回复 这是第四条回复 这是第四条回复 这是第四条回复\n', '1', '2018-12-18 21:11:10');

-- ----------------------------
-- Table structure for `user_article`
-- ----------------------------
DROP TABLE IF EXISTS `user_article`;
CREATE TABLE `user_article` (
  `article_id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '文章id(自增)',
  `article_writer_id` int(10) NOT NULL COMMENT '作者ID',
  `article_state` enum('0','1') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '1' COMMENT '文章状态 1：已发表  0：已删除',
  `article_update_time` timestamp NULL DEFAULT NULL COMMENT '鏂囩珷 鏇存柊/鍙戣〃 鏃堕棿',
  `article_title` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '文章题目/标题',
  `article_content_text` text,
  `article_content_id` varchar(30) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '閺傚洨鐝烽崘鍛啇',
  PRIMARY KEY (`article_id`)
) ENGINE=InnoDB AUTO_INCREMENT=18 DEFAULT CHARSET=utf8 COMMENT='文章id';

-- ----------------------------
-- Records of user_article
-- ----------------------------
INSERT INTO `user_article` VALUES ('2', '123456', '1', '2018-12-14 21:26:08', '这是管理员正式发布的第一篇文章', '这是管理员正式发布的第一篇文章', '8SUK21260820181214eiGr');
INSERT INTO `user_article` VALUES ('3', '123474', '1', '2018-12-19 02:02:56', '第二篇文章 test - test', 'Java (计算机编程语言）Java是一门面向对象编程语言，不仅吸收了C++语言的各种优点，还摒弃了C++里难以理解的多继承、指针等概念，因此Java语言具有功能强大和简单易用两个特征。Java语言作为静态面向对象编程语言的代表，极好地实现了面向对象理论，允许程序员以优雅的思维方式进行复杂的编程。Java具有简单性、面向对象、分布式、健壮性、安全性、平台独立与可移植性、多线程、动态性等特点。Java可以编写桌面应用程序、Web应用程序、分布式系统和嵌入式系统应用程序等。编程环境Java概念图JDK（Java Development Kit）称为Java开发包或Java开发工具，是一个编写Java的Applet小程序和应用程序的程序开发环境。JDK是整个Java的核心，包括了Java运行环境（Java Runtime Envirnment），一些Java工具和Java的核心类库（Java API）。不论什么Java应用服务器实质都是内置了某个版本的JDK。主流的JDK是Sun公司发布的JDK，除了Sun之外，还有很多公司和组织都开发了自己的JDK，例如，IBM公司开发的JDK，BEA公司的Jrocket，还有GNU组织开发的JDK。另外，可以把Java API类库中的Java SE API子集和Java虚拟机这两部分统称为JRE（JAVA Runtime Environment），JRE是支持Java程序运行的标准环境。JRE是个运行环境，JDK是个开发环境。因此写Java程序的时候需要JDK，而运行Java程序的时候就需要JRE。而JDK里面已经包含了JRE，因此只要安装了JDK，就可以编辑Java程序，也可以正常运行Java程序。但由于JDK包含了许多与运行无关的内容，占用的空间较大，因此运行普通的Java程序无须安装JDK，而只需要安装JRE即可。编程工具Eclipse：一个开放源代码的、基于Java的可扩展开发平台。NetBeans：开放源码的Java集成开发环境，适用于各种客户机和Web应用。IntelliJ IDEA：在代码自动提示、代码分析等方面的具有很好的功能。MyEclipse：由Genuitec公司开发的一款商业化软件，是应用比较广泛的Java应用程序集成开发环境。EditPlus：如果正确配置Java的编译器“Javac”以及解释器“Java”后，可直接使用EditPlus编译执行Java程序。1.简单性Java看起来设计得很像C++，但是为了使语言小和容易熟悉，设计者们把C++语言中许多可用的特征去掉了，这些特征是一般程序员很少使用的。例如，Java不支持go to语句，代之以提供break和continue语句以及异常处理。Java还剔除了C++的操作符过载（overload）和多继承特征，并且不使用主文件，免去了预处理程序。因为Java没有结构，数组和串都是对象，所以不需要指针。Java能够自动处理对象的引用和间接引用，实现自动的无用单元收集，使用户不必为存储管理问题烦恼，能更多的时间和精力花在研发上。2.面向对象Java是一个面向对象的语言。对程序员来说，这意味着要注意应中的数据和操纵数据的方法（method），而不是严格地用过程来思考。在一个面向对象的系统中，类（class）是数据和操作数据的方法的集合。数据和方法一起描述对象（object）的状态和行为。每一对象是其状态和行为的封装。类是按一定体系和层次安排的，使得子类可以从超类继承行为。在这个类层次体系中有一个根类，它是具有一般行为的类。Java程序是用类来组织的。Java还包括一个类的扩展集合，分别组成各种程序包（Package），用户可以在自己的程序中使用。例如，Java提供产生图形用户接口部件的类（java.awt包），这里awt是抽象窗口工具集（abstract windowing toolkit）的缩写，处理输入输出的类（java.io包）和支持网络功能的类（java.net包）。3.分布性Java设计成支持在网络上应用，它是分布式语言。Java既支持各种层次的网络连接，又以Socket类支持可靠的流（stream）网络连接，所以用户可以产生分布式的客户机和服务器。网络变成软件应用的分布运载工具。Java程序只要编写一次，就可到处运行。4.编译和解释性Java编译程序生成字节码（byte-code），而不是通常的机器码。Java字节码提供对体系结构中性的目标文件格式，代码设计成可有效地传送程序到多个平台。Java程序可以在任何实现了Java解释程序和运行系统（run-time system）的系统上运行。在一个解释性的环境中，程序开发的标准“链接”阶段大大消失了。如果说Java还有一个链接阶段，它只是把新类装进环境的过程，它是增量式的、轻量级的过程。因此，Java支持快速原型和容易试验，它将导致快速程序开发。这是一个与传统的、耗时的“编译、链接和测试”形成鲜明对比的精巧的开发过程。5.稳健性JavaJava原来是用作编写消费类家用电子产品软件的语言，所以它是被设计成写高可靠和稳健软件的。Java消除了某些编程错误，使得用它写可靠软件相当容易。Java是一个强类型语言，它允许扩展编译时检查潜在类型不匹配问题的功能。Java要求显式的方法声明，它不支持C风格的隐式声明。这些严格的要求保证编译程序能捕捉调用错误，这就导致更可靠的程序。可靠性方面最重要的增强之一是Java的存储模型。Java不支持指针，它消除重写存储和讹误数据的可能性。类似地，Java自动的“无用单元收集”预防存储漏泄和其它有关动态存储分配和解除分配的有害错误。Java解释程序也执行许多运行时的检查，诸如验证所有数组和串访问是否在界限之内。异常处理是Java中使得程序更稳健的另一个特征。异常是某种类似于错误的异常条件出现的信号。使用try/catch/finally语句，程序员可以找到出错的处理代码，这就简化了出错处理和恢复的任务。6.安全性Java的存储分配模型是它防御恶意代码的主要方法之一。Java没有指针，所以程序员不能得到隐蔽起来的内幕和伪造指针去指向存储器。更重要的是，Java编译程序不处理存储安排决策，所以程序员不能通过查看声明去猜测类的实际存储安排。编译的Java代码中的存储引用在运行时由Java解释程序决定实际存储地址。Java运行系统使用字节码验证过程来保证装载到网络上的代码不违背任何Java语言限制。这个安全机制部分包括类如何从网上装载。例如，装载的类是放在分开的名字空间而不是局部类，预防恶意的小应用程序用它自己的版本来代替标准Java类。7.可移植性Java使得语言声明不依赖于实现的方面。例如，Java显式说明每个基本数据类型的大小和它的运算行为（这些数据类型由Java语法描述）。Java环境本身对新的硬件平台和操作系统是可移植的。Java编译程序也用Java编写，而Java运行系统用ANSIC语言编写。8.高性能Java是一种先编译后解释的语言，所以它不如全编译性语言快。但是有些情况下性能是很要紧的，为了支持这些情况，Java设计者制作了“及时”编译程序，它能在运行时把Java字节码翻译成特定CPU（中央处理器）的机器代码，也就是实现全编译了。Java字节码格式设计时考虑到这些“及时”编译程序的需要，所以生成机器代码的过程相当简单，它能产生相当好的代码。9.多线索性Java是多线索语言，它提供支持多线索的执行（也称为轻便过程），能处理不同任务，使具有线索的程序设计很容易。Java的lang包提供一个Thread类，它支持开始线索、运行线索、停止线索和检查线索状态的方法。Java的线索支持也包括一组同步原语。这些原语是基于监督程序和条件变量风范，由C.A.R.Haore开发的广泛使用的同步化方案。用关键词synchronized，程序员可以说明某些方法在一个类中不能并发地运行。这些方法在监督程序控制之下，确保变量维持在一个一致的状态。10.动态性Java语言设计成适应于变化的环境，它是一个动态的语言。例如，Java中的类是根据需要载入的，甚至有些是通过网络获取的。', 'VE5602025620181219KmvN');
INSERT INTO `user_article` VALUES ('4', '123474', '1', '2018-12-19 02:10:32', '第三3️⃣篇文章 test - test', 'Java (计算机编程语言）Java是一门面向对象编程语言，不仅吸收了C++语言的各种优点，还摒弃了C++里难以理解的多继承、指针等概念，因此Java语言具有功能强大和简单易用两个特征。Java语言作为静态面向对象编程语言的代表，极好地实现了面向对象理论，允许程序员以优雅的思维方式进行复杂的编程。Java具有简单性、面向对象、分布式、健壮性、安全性、平台独立与可移植性、多线程、动态性等特点。Java可以编写桌面应用程序、Web应用程序、分布式系统和嵌入式系统应用程序等。编程环境Java概念图JDK（Java Development Kit）称为Java开发包或Java开发工具，是一个编写Java的Applet小程序和应用程序的程序开发环境。JDK是整个Java的核心，包括了Java运行环境（Java Runtime Envirnment），一些Java工具和Java的核心类库（Java API）。不论什么Java应用服务器实质都是内置了某个版本的JDK。主流的JDK是Sun公司发布的JDK，除了Sun之外，还有很多公司和组织都开发了自己的JDK，例如，IBM公司开发的JDK，BEA公司的Jrocket，还有GNU组织开发的JDK。另外，可以把Java API类库中的Java SE API子集和Java虚拟机这两部分统称为JRE（JAVA Runtime Environment），JRE是支持Java程序运行的标准环境。JRE是个运行环境，JDK是个开发环境。因此写Java程序的时候需要JDK，而运行Java程序的时候就需要JRE。而JDK里面已经包含了JRE，因此只要安装了JDK，就可以编辑Java程序，也可以正常运行Java程序。但由于JDK包含了许多与运行无关的内容，占用的空间较大，因此运行普通的Java程序无须安装JDK，而只需要安装JRE即可。编程工具Eclipse：一个开放源代码的、基于Java的可扩展开发平台。NetBeans：开放源码的Java集成开发环境，适用于各种客户机和Web应用。IntelliJ IDEA：在代码自动提示、代码分析等方面的具有很好的功能。MyEclipse：由Genuitec公司开发的一款商业化软件，是应用比较广泛的Java应用程序集成开发环境。EditPlus：如果正确配置Java的编译器“Javac”以及解释器“Java”后，可直接使用EditPlus编译执行Java程序。1.简单性Java看起来设计得很像C++，但是为了使语言小和容易熟悉，设计者们把C++语言中许多可用的特征去掉了，这些特征是一般程序员很少使用的。例如，Java不支持go to语句，代之以提供break和continue语句以及异常处理。Java还剔除了C++的操作符过载（overload）和多继承特征，并且不使用主文件，免去了预处理程序。因为Java没有结构，数组和串都是对象，所以不需要指针。Java能够自动处理对象的引用和间接引用，实现自动的无用单元收集，使用户不必为存储管理问题烦恼，能更多的时间和精力花在研发上。2.面向对象Java是一个面向对象的语言。对程序员来说，这意味着要注意应中的数据和操纵数据的方法（method），而不是严格地用过程来思考。在一个面向对象的系统中，类（class）是数据和操作数据的方法的集合。数据和方法一起描述对象（object）的状态和行为。每一对象是其状态和行为的封装。类是按一定体系和层次安排的，使得子类可以从超类继承行为。在这个类层次体系中有一个根类，它是具有一般行为的类。Java程序是用类来组织的。Java还包括一个类的扩展集合，分别组成各种程序包（Package），用户可以在自己的程序中使用。例如，Java提供产生图形用户接口部件的类（java.awt包），这里awt是抽象窗口工具集（abstract windowing toolkit）的缩写，处理输入输出的类（java.io包）和支持网络功能的类（java.net包）。3.分布性Java设计成支持在网络上应用，它是分布式语言。Java既支持各种层次的网络连接，又以Socket类支持可靠的流（stream）网络连接，所以用户可以产生分布式的客户机和服务器。网络变成软件应用的分布运载工具。Java程序只要编写一次，就可到处运行。4.编译和解释性Java编译程序生成字节码（byte-code），而不是通常的机器码。Java字节码提供对体系结构中性的目标文件格式，代码设计成可有效地传送程序到多个平台。Java程序可以在任何实现了Java解释程序和运行系统（run-time system）的系统上运行。在一个解释性的环境中，程序开发的标准“链接”阶段大大消失了。如果说Java还有一个链接阶段，它只是把新类装进环境的过程，它是增量式的、轻量级的过程。因此，Java支持快速原型和容易试验，它将导致快速程序开发。这是一个与传统的、耗时的“编译、链接和测试”形成鲜明对比的精巧的开发过程。5.稳健性JavaJava原来是用作编写消费类家用电子产品软件的语言，所以它是被设计成写高可靠和稳健软件的。Java消除了某些编程错误，使得用它写可靠软件相当容易。Java是一个强类型语言，它允许扩展编译时检查潜在类型不匹配问题的功能。Java要求显式的方法声明，它不支持C风格的隐式声明。这些严格的要求保证编译程序能捕捉调用错误，这就导致更可靠的程序。可靠性方面最重要的增强之一是Java的存储模型。Java不支持指针，它消除重写存储和讹误数据的可能性。类似地，Java自动的“无用单元收集”预防存储漏泄和其它有关动态存储分配和解除分配的有害错误。Java解释程序也执行许多运行时的检查，诸如验证所有数组和串访问是否在界限之内。异常处理是Java中使得程序更稳健的另一个特征。异常是某种类似于错误的异常条件出现的信号。使用try/catch/finally语句，程序员可以找到出错的处理代码，这就简化了出错处理和恢复的任务。6.安全性Java的存储分配模型是它防御恶意代码的主要方法之一。Java没有指针，所以程序员不能得到隐蔽起来的内幕和伪造指针去指向存储器。更重要的是，Java编译程序不处理存储安排决策，所以程序员不能通过查看声明去猜测类的实际存储安排。编译的Java代码中的存储引用在运行时由Java解释程序决定实际存储地址。Java运行系统使用字节码验证过程来保证装载到网络上的代码不违背任何Java语言限制。这个安全机制部分包括类如何从网上装载。例如，装载的类是放在分开的名字空间而不是局部类，预防恶意的小应用程序用它自己的版本来代替标准Java类。7.可移植性Java使得语言声明不依赖于实现的方面。例如，Java显式说明每个基本数据类型的大小和它的运算行为（这些数据类型由Java语法描述）。Java环境本身对新的硬件平台和操作系统是可移植的。Java编译程序也用Java编写，而Java运行系统用ANSIC语言编写。8.高性能Java是一种先编译后解释的语言，所以它不如全编译性语言快。但是有些情况下性能是很要紧的，为了支持这些情况，Java设计者制作了“及时”编译程序，它能在运行时把Java字节码翻译成特定CPU（中央处理器）的机器代码，也就是实现全编译了。Java字节码格式设计时考虑到这些“及时”编译程序的需要，所以生成机器代码的过程相当简单，它能产生相当好的代码。9.多线索性Java是多线索语言，它提供支持多线索的执行（也称为轻便过程），能处理不同任务，使具有线索的程序设计很容易。Java的lang包提供一个Thread类，它支持开始线索、运行线索、停止线索和检查线索状态的方法。Java的线索支持也包括一组同步原语。这些原语是基于监督程序和条件变量风范，由C.A.R.Haore开发的广泛使用的同步化方案。用关键词synchronized，程序员可以说明某些方法在一个类中不能并发地运行。这些方法在监督程序控制之下，确保变量维持在一个一致的状态。10.动态性Java语言设计成适应于变化的环境，它是一个动态的语言。例如，Java中的类是根据需要载入的，甚至有些是通过网络获取的。', '589302103220181219gSyK');
INSERT INTO `user_article` VALUES ('5', '123474', '1', '2018-12-19 02:13:28', '这是第四篇文章  test -  test -- test', 'Java (计算机编程语言）Java是一门面向对象编程语言，不仅吸收了C++语言的各种优点，还摒弃了C++里难以理解的多继承、指针等概念，因此Java语言具有功能强大和简单易用两个特征。Java语言作为静态面向对象编程语言的代表，极好地实现了面向对象理论，允许程序员以优雅的思维方式进行复杂的编程。Java具有简单性、面向对象、分布式、健壮性、安全性、平台独立与可移植性、多线程、动态性等特点。Java可以编写桌面应用程序、Web应用程序、分布式系统和嵌入式系统应用程序等。编程环境Java概念图JDK（Java Development Kit）称为Java开发包或Java开发工具，是一个编写Java的Applet小程序和应用程序的程序开发环境。JDK是整个Java的核心，包括了Java运行环境（Java Runtime Envirnment），一些Java工具和Java的核心类库（Java API）。不论什么Java应用服务器实质都是内置了某个版本的JDK。主流的JDK是Sun公司发布的JDK，除了Sun之外，还有很多公司和组织都开发了自己的JDK，例如，IBM公司开发的JDK，BEA公司的Jrocket，还有GNU组织开发的JDK。另外，可以把Java API类库中的Java SE API子集和Java虚拟机这两部分统称为JRE（JAVA Runtime Environment），JRE是支持Java程序运行的标准环境。JRE是个运行环境，JDK是个开发环境。因此写Java程序的时候需要JDK，而运行Java程序的时候就需要JRE。而JDK里面已经包含了JRE，因此只要安装了JDK，就可以编辑Java程序，也可以正常运行Java程序。但由于JDK包含了许多与运行无关的内容，占用的空间较大，因此运行普通的Java程序无须安装JDK，而只需要安装JRE即可。编程工具Eclipse：一个开放源代码的、基于Java的可扩展开发平台。NetBeans：开放源码的Java集成开发环境，适用于各种客户机和Web应用。IntelliJ IDEA：在代码自动提示、代码分析等方面的具有很好的功能。MyEclipse：由Genuitec公司开发的一款商业化软件，是应用比较广泛的Java应用程序集成开发环境。EditPlus：如果正确配置Java的编译器“Javac”以及解释器“Java”后，可直接使用EditPlus编译执行Java程序。1.简单性Java看起来设计得很像C++，但是为了使语言小和容易熟悉，设计者们把C++语言中许多可用的特征去掉了，这些特征是一般程序员很少使用的。例如，Java不支持go to语句，代之以提供break和continue语句以及异常处理。Java还剔除了C++的操作符过载（overload）和多继承特征，并且不使用主文件，免去了预处理程序。因为Java没有结构，数组和串都是对象，所以不需要指针。Java能够自动处理对象的引用和间接引用，实现自动的无用单元收集，使用户不必为存储管理问题烦恼，能更多的时间和精力花在研发上。2.面向对象Java是一个面向对象的语言。对程序员来说，这意味着要注意应中的数据和操纵数据的方法（method），而不是严格地用过程来思考。在一个面向对象的系统中，类（class）是数据和操作数据的方法的集合。数据和方法一起描述对象（object）的状态和行为。每一对象是其状态和行为的封装。类是按一定体系和层次安排的，使得子类可以从超类继承行为。在这个类层次体系中有一个根类，它是具有一般行为的类。Java程序是用类来组织的。Java还包括一个类的扩展集合，分别组成各种程序包（Package），用户可以在自己的程序中使用。例如，Java提供产生图形用户接口部件的类（java.awt包），这里awt是抽象窗口工具集（abstract windowing toolkit）的缩写，处理输入输出的类（java.io包）和支持网络功能的类（java.net包）。3.分布性Java设计成支持在网络上应用，它是分布式语言。Java既支持各种层次的网络连接，又以Socket类支持可靠的流（stream）网络连接，所以用户可以产生分布式的客户机和服务器。网络变成软件应用的分布运载工具。Java程序只要编写一次，就可到处运行。4.编译和解释性Java编译程序生成字节码（byte-code），而不是通常的机器码。Java字节码提供对体系结构中性的目标文件格式，代码设计成可有效地传送程序到多个平台。Java程序可以在任何实现了Java解释程序和运行系统（run-time system）的系统上运行。在一个解释性的环境中，程序开发的标准“链接”阶段大大消失了。如果说Java还有一个链接阶段，它只是把新类装进环境的过程，它是增量式的、轻量级的过程。因此，Java支持快速原型和容易试验，它将导致快速程序开发。这是一个与传统的、耗时的“编译、链接和测试”形成鲜明对比的精巧的开发过程。5.稳健性JavaJava原来是用作编写消费类家用电子产品软件的语言，所以它是被设计成写高可靠和稳健软件的。Java消除了某些编程错误，使得用它写可靠软件相当容易。Java是一个强类型语言，它允许扩展编译时检查潜在类型不匹配问题的功能。Java要求显式的方法声明，它不支持C风格的隐式声明。这些严格的要求保证编译程序能捕捉调用错误，这就导致更可靠的程序。可靠性方面最重要的增强之一是Java的存储模型。Java不支持指针，它消除重写存储和讹误数据的可能性。类似地，Java自动的“无用单元收集”预防存储漏泄和其它有关动态存储分配和解除分配的有害错误。Java解释程序也执行许多运行时的检查，诸如验证所有数组和串访问是否在界限之内。异常处理是Java中使得程序更稳健的另一个特征。异常是某种类似于错误的异常条件出现的信号。使用try/catch/finally语句，程序员可以找到出错的处理代码，这就简化了出错处理和恢复的任务。6.安全性Java的存储分配模型是它防御恶意代码的主要方法之一。Java没有指针，所以程序员不能得到隐蔽起来的内幕和伪造指针去指向存储器。更重要的是，Java编译程序不处理存储安排决策，所以程序员不能通过查看声明去猜测类的实际存储安排。编译的Java代码中的存储引用在运行时由Java解释程序决定实际存储地址。Java运行系统使用字节码验证过程来保证装载到网络上的代码不违背任何Java语言限制。这个安全机制部分包括类如何从网上装载。例如，装载的类是放在分开的名字空间而不是局部类，预防恶意的小应用程序用它自己的版本来代替标准Java类。7.可移植性Java使得语言声明不依赖于实现的方面。例如，Java显式说明每个基本数据类型的大小和它的运算行为（这些数据类型由Java语法描述）。Java环境本身对新的硬件平台和操作系统是可移植的。Java编译程序也用Java编写，而Java运行系统用ANSIC语言编写。8.高性能Java是一种先编译后解释的语言，所以它不如全编译性语言快。但是有些情况下性能是很要紧的，为了支持这些情况，Java设计者制作了“及时”编译程序，它能在运行时把Java字节码翻译成特定CPU（中央处理器）的机器代码，也就是实现全编译了。Java字节码格式设计时考虑到这些“及时”编译程序的需要，所以生成机器代码的过程相当简单，它能产生相当好的代码。9.多线索性Java是多线索语言，它提供支持多线索的执行（也称为轻便过程），能处理不同任务，使具有线索的程序设计很容易。Java的lang包提供一个Thread类，它支持开始线索、运行线索、停止线索和检查线索状态的方法。Java的线索支持也包括一组同步原语。这些原语是基于监督程序和条件变量风范，由C.A.R.Haore开发的广泛使用的同步化方案。用关键词synchronized，程序员可以说明某些方法在一个类中不能并发地运行。这些方法在监督程序控制之下，确保变量维持在一个一致的状态。10.动态性Java语言设计成适应于变化的环境，它是一个动态的语言。例如，Java中的类是根据需要载入的，甚至有些是通过网络获取的。', 'd60A02132820181219rNEK');
INSERT INTO `user_article` VALUES ('6', '123458', '1', '2018-12-19 02:21:35', '第五5️⃣⑤篇文章 test - test - test', 'Java (计算机编程语言）Java是一门面向对象编程语言，不仅吸收了C++语言的各种优点，还摒弃了C++里难以理解的多继承、指针等概念，因此Java语言具有功能强大和简单易用两个特征。Java语言作为静态面向对象编程语言的代表，极好地实现了面向对象理论，允许程序员以优雅的思维方式进行复杂的编程。Java具有简单性、面向对象、分布式、健壮性、安全性、平台独立与可移植性、多线程、动态性等特点。Java可以编写桌面应用程序、Web应用程序、分布式系统和嵌入式系统应用程序等。编程环境Java概念图JDK（Java Development Kit）称为Java开发包或Java开发工具，是一个编写Java的Applet小程序和应用程序的程序开发环境。JDK是整个Java的核心，包括了Java运行环境（Java Runtime Envirnment），一些Java工具和Java的核心类库（Java API）。不论什么Java应用服务器实质都是内置了某个版本的JDK。主流的JDK是Sun公司发布的JDK，除了Sun之外，还有很多公司和组织都开发了自己的JDK，例如，IBM公司开发的JDK，BEA公司的Jrocket，还有GNU组织开发的JDK。另外，可以把Java API类库中的Java SE API子集和Java虚拟机这两部分统称为JRE（JAVA Runtime Environment），JRE是支持Java程序运行的标准环境。JRE是个运行环境，JDK是个开发环境。因此写Java程序的时候需要JDK，而运行Java程序的时候就需要JRE。而JDK里面已经包含了JRE，因此只要安装了JDK，就可以编辑Java程序，也可以正常运行Java程序。但由于JDK包含了许多与运行无关的内容，占用的空间较大，因此运行普通的Java程序无须安装JDK，而只需要安装JRE即可。编程工具Eclipse：一个开放源代码的、基于Java的可扩展开发平台。NetBeans：开放源码的Java集成开发环境，适用于各种客户机和Web应用。IntelliJ IDEA：在代码自动提示、代码分析等方面的具有很好的功能。MyEclipse：由Genuitec公司开发的一款商业化软件，是应用比较广泛的Java应用程序集成开发环境。EditPlus：如果正确配置Java的编译器“Javac”以及解释器“Java”后，可直接使用EditPlus编译执行Java程序。1.简单性Java看起来设计得很像C++，但是为了使语言小和容易熟悉，设计者们把C++语言中许多可用的特征去掉了，这些特征是一般程序员很少使用的。例如，Java不支持go to语句，代之以提供break和continue语句以及异常处理。Java还剔除了C++的操作符过载（overload）和多继承特征，并且不使用主文件，免去了预处理程序。因为Java没有结构，数组和串都是对象，所以不需要指针。Java能够自动处理对象的引用和间接引用，实现自动的无用单元收集，使用户不必为存储管理问题烦恼，能更多的时间和精力花在研发上。2.面向对象Java是一个面向对象的语言。对程序员来说，这意味着要注意应中的数据和操纵数据的方法（method），而不是严格地用过程来思考。在一个面向对象的系统中，类（class）是数据和操作数据的方法的集合。数据和方法一起描述对象（object）的状态和行为。每一对象是其状态和行为的封装。类是按一定体系和层次安排的，使得子类可以从超类继承行为。在这个类层次体系中有一个根类，它是具有一般行为的类。Java程序是用类来组织的。Java还包括一个类的扩展集合，分别组成各种程序包（Package），用户可以在自己的程序中使用。例如，Java提供产生图形用户接口部件的类（java.awt包），这里awt是抽象窗口工具集（abstract windowing toolkit）的缩写，处理输入输出的类（java.io包）和支持网络功能的类（java.net包）。3.分布性Java设计成支持在网络上应用，它是分布式语言。Java既支持各种层次的网络连接，又以Socket类支持可靠的流（stream）网络连接，所以用户可以产生分布式的客户机和服务器。网络变成软件应用的分布运载工具。Java程序只要编写一次，就可到处运行。4.编译和解释性Java编译程序生成字节码（byte-code），而不是通常的机器码。Java字节码提供对体系结构中性的目标文件格式，代码设计成可有效地传送程序到多个平台。Java程序可以在任何实现了Java解释程序和运行系统（run-time system）的系统上运行。在一个解释性的环境中，程序开发的标准“链接”阶段大大消失了。如果说Java还有一个链接阶段，它只是把新类装进环境的过程，它是增量式的、轻量级的过程。因此，Java支持快速原型和容易试验，它将导致快速程序开发。这是一个与传统的、耗时的“编译、链接和测试”形成鲜明对比的精巧的开发过程。5.稳健性JavaJava原来是用作编写消费类家用电子产品软件的语言，所以它是被设计成写高可靠和稳健软件的。Java消除了某些编程错误，使得用它写可靠软件相当容易。Java是一个强类型语言，它允许扩展编译时检查潜在类型不匹配问题的功能。Java要求显式的方法声明，它不支持C风格的隐式声明。这些严格的要求保证编译程序能捕捉调用错误，这就导致更可靠的程序。可靠性方面最重要的增强之一是Java的存储模型。Java不支持指针，它消除重写存储和讹误数据的可能性。类似地，Java自动的“无用单元收集”预防存储漏泄和其它有关动态存储分配和解除分配的有害错误。Java解释程序也执行许多运行时的检查，诸如验证所有数组和串访问是否在界限之内。异常处理是Java中使得程序更稳健的另一个特征。异常是某种类似于错误的异常条件出现的信号。使用try/catch/finally语句，程序员可以找到出错的处理代码，这就简化了出错处理和恢复的任务。6.安全性Java的存储分配模型是它防御恶意代码的主要方法之一。Java没有指针，所以程序员不能得到隐蔽起来的内幕和伪造指针去指向存储器。更重要的是，Java编译程序不处理存储安排决策，所以程序员不能通过查看声明去猜测类的实际存储安排。编译的Java代码中的存储引用在运行时由Java解释程序决定实际存储地址。Java运行系统使用字节码验证过程来保证装载到网络上的代码不违背任何Java语言限制。这个安全机制部分包括类如何从网上装载。例如，装载的类是放在分开的名字空间而不是局部类，预防恶意的小应用程序用它自己的版本来代替标准Java类。7.可移植性Java使得语言声明不依赖于实现的方面。例如，Java显式说明每个基本数据类型的大小和它的运算行为（这些数据类型由Java语法描述）。Java环境本身对新的硬件平台和操作系统是可移植的。Java编译程序也用Java编写，而Java运行系统用ANSIC语言编写。8.高性能Java是一种先编译后解释的语言，所以它不如全编译性语言快。但是有些情况下性能是很要紧的，为了支持这些情况，Java设计者制作了“及时”编译程序，它能在运行时把Java字节码翻译成特定CPU（中央处理器）的机器代码，也就是实现全编译了。Java字节码格式设计时考虑到这些“及时”编译程序的需要，所以生成机器代码的过程相当简单，它能产生相当好的代码。9.多线索性Java是多线索语言，它提供支持多线索的执行（也称为轻便过程），能处理不同任务，使具有线索的程序设计很容易。Java的lang包提供一个Thread类，它支持开始线索、运行线索、停止线索和检查线索状态的方法。Java的线索支持也包括一组同步原语。这些原语是基于监督程序和条件变量风范，由C.A.R.Haore开发的广泛使用的同步化方案。用关键词synchronized，程序员可以说明某些方法在一个类中不能并发地运行。这些方法在监督程序控制之下，确保变量维持在一个一致的状态。10.动态性Java语言设计成适应于变化的环境，它是一个动态的语言。例如，Java中的类是根据需要载入的，甚至有些是通过网络获取的。', '475R02213520181219vTNL');
INSERT INTO `user_article` VALUES ('7', '123456', '1', '2018-12-19 02:24:23', '第6️⃣六6️⃣篇文章 test - test', 'Java (计算机编程语言）Java是一门面向对象编程语言，不仅吸收了C++语言的各种优点，还摒弃了C++里难以理解的多继承、指针等概念，因此Java语言具有功能强大和简单易用两个特征。Java语言作为静态面向对象编程语言的代表，极好地实现了面向对象理论，允许程序员以优雅的思维方式进行复杂的编程。Java具有简单性、面向对象、分布式、健壮性、安全性、平台独立与可移植性、多线程、动态性等特点。Java可以编写桌面应用程序、Web应用程序、分布式系统和嵌入式系统应用程序等。编程环境Java概念图JDK（Java Development Kit）称为Java开发包或Java开发工具，是一个编写Java的Applet小程序和应用程序的程序开发环境。JDK是整个Java的核心，包括了Java运行环境（Java Runtime Envirnment），一些Java工具和Java的核心类库（Java API）。不论什么Java应用服务器实质都是内置了某个版本的JDK。主流的JDK是Sun公司发布的JDK，除了Sun之外，还有很多公司和组织都开发了自己的JDK，例如，IBM公司开发的JDK，BEA公司的Jrocket，还有GNU组织开发的JDK。另外，可以把Java API类库中的Java SE API子集和Java虚拟机这两部分统称为JRE（JAVA Runtime Environment），JRE是支持Java程序运行的标准环境。JRE是个运行环境，JDK是个开发环境。因此写Java程序的时候需要JDK，而运行Java程序的时候就需要JRE。而JDK里面已经包含了JRE，因此只要安装了JDK，就可以编辑Java程序，也可以正常运行Java程序。但由于JDK包含了许多与运行无关的内容，占用的空间较大，因此运行普通的Java程序无须安装JDK，而只需要安装JRE即可。编程工具Eclipse：一个开放源代码的、基于Java的可扩展开发平台。NetBeans：开放源码的Java集成开发环境，适用于各种客户机和Web应用。IntelliJ IDEA：在代码自动提示、代码分析等方面的具有很好的功能。MyEclipse：由Genuitec公司开发的一款商业化软件，是应用比较广泛的Java应用程序集成开发环境。EditPlus：如果正确配置Java的编译器“Javac”以及解释器“Java”后，可直接使用EditPlus编译执行Java程序。1.简单性Java看起来设计得很像C++，但是为了使语言小和容易熟悉，设计者们把C++语言中许多可用的特征去掉了，这些特征是一般程序员很少使用的。例如，Java不支持go to语句，代之以提供break和continue语句以及异常处理。Java还剔除了C++的操作符过载（overload）和多继承特征，并且不使用主文件，免去了预处理程序。因为Java没有结构，数组和串都是对象，所以不需要指针。Java能够自动处理对象的引用和间接引用，实现自动的无用单元收集，使用户不必为存储管理问题烦恼，能更多的时间和精力花在研发上。2.面向对象Java是一个面向对象的语言。对程序员来说，这意味着要注意应中的数据和操纵数据的方法（method），而不是严格地用过程来思考。在一个面向对象的系统中，类（class）是数据和操作数据的方法的集合。数据和方法一起描述对象（object）的状态和行为。每一对象是其状态和行为的封装。类是按一定体系和层次安排的，使得子类可以从超类继承行为。在这个类层次体系中有一个根类，它是具有一般行为的类。Java程序是用类来组织的。Java还包括一个类的扩展集合，分别组成各种程序包（Package），用户可以在自己的程序中使用。例如，Java提供产生图形用户接口部件的类（java.awt包），这里awt是抽象窗口工具集（abstract windowing toolkit）的缩写，处理输入输出的类（java.io包）和支持网络功能的类（java.net包）。3.分布性Java设计成支持在网络上应用，它是分布式语言。Java既支持各种层次的网络连接，又以Socket类支持可靠的流（stream）网络连接，所以用户可以产生分布式的客户机和服务器。网络变成软件应用的分布运载工具。Java程序只要编写一次，就可到处运行。4.编译和解释性Java编译程序生成字节码（byte-code），而不是通常的机器码。Java字节码提供对体系结构中性的目标文件格式，代码设计成可有效地传送程序到多个平台。Java程序可以在任何实现了Java解释程序和运行系统（run-time system）的系统上运行。在一个解释性的环境中，程序开发的标准“链接”阶段大大消失了。如果说Java还有一个链接阶段，它只是把新类装进环境的过程，它是增量式的、轻量级的过程。因此，Java支持快速原型和容易试验，它将导致快速程序开发。这是一个与传统的、耗时的“编译、链接和测试”形成鲜明对比的精巧的开发过程。5.稳健性JavaJava原来是用作编写消费类家用电子产品软件的语言，所以它是被设计成写高可靠和稳健软件的。Java消除了某些编程错误，使得用它写可靠软件相当容易。Java是一个强类型语言，它允许扩展编译时检查潜在类型不匹配问题的功能。Java要求显式的方法声明，它不支持C风格的隐式声明。这些严格的要求保证编译程序能捕捉调用错误，这就导致更可靠的程序。可靠性方面最重要的增强之一是Java的存储模型。Java不支持指针，它消除重写存储和讹误数据的可能性。类似地，Java自动的“无用单元收集”预防存储漏泄和其它有关动态存储分配和解除分配的有害错误。Java解释程序也执行许多运行时的检查，诸如验证所有数组和串访问是否在界限之内。异常处理是Java中使得程序更稳健的另一个特征。异常是某种类似于错误的异常条件出现的信号。使用try/catch/finally语句，程序员可以找到出错的处理代码，这就简化了出错处理和恢复的任务。6.安全性Java的存储分配模型是它防御恶意代码的主要方法之一。Java没有指针，所以程序员不能得到隐蔽起来的内幕和伪造指针去指向存储器。更重要的是，Java编译程序不处理存储安排决策，所以程序员不能通过查看声明去猜测类的实际存储安排。编译的Java代码中的存储引用在运行时由Java解释程序决定实际存储地址。Java运行系统使用字节码验证过程来保证装载到网络上的代码不违背任何Java语言限制。这个安全机制部分包括类如何从网上装载。例如，装载的类是放在分开的名字空间而不是局部类，预防恶意的小应用程序用它自己的版本来代替标准Java类。7.可移植性Java使得语言声明不依赖于实现的方面。例如，Java显式说明每个基本数据类型的大小和它的运算行为（这些数据类型由Java语法描述）。Java环境本身对新的硬件平台和操作系统是可移植的。Java编译程序也用Java编写，而Java运行系统用ANSIC语言编写。8.高性能Java是一种先编译后解释的语言，所以它不如全编译性语言快。但是有些情况下性能是很要紧的，为了支持这些情况，Java设计者制作了“及时”编译程序，它能在运行时把Java字节码翻译成特定CPU（中央处理器）的机器代码，也就是实现全编译了。Java字节码格式设计时考虑到这些“及时”编译程序的需要，所以生成机器代码的过程相当简单，它能产生相当好的代码。9.多线索性Java是多线索语言，它提供支持多线索的执行（也称为轻便过程），能处理不同任务，使具有线索的程序设计很容易。Java的lang包提供一个Thread类，它支持开始线索、运行线索、停止线索和检查线索状态的方法。Java的线索支持也包括一组同步原语。这些原语是基于监督程序和条件变量风范，由C.A.R.Haore开发的广泛使用的同步化方案。用关键词synchronized，程序员可以说明某些方法在一个类中不能并发地运行。这些方法在监督程序控制之下，确保变量维持在一个一致的状态。10.动态性Java语言设计成适应于变化的环境，它是一个动态的语言。例如，Java中的类是根据需要载入的，甚至有些是通过网络获取的。', 'lx0V02242320181219focV');
INSERT INTO `user_article` VALUES ('8', '123475', '1', '2018-12-19 02:37:11', '第七七四十九篇文章 test - test', 'Java (计算机编程语言）Java是一门面向对象编程语言，不仅吸收了C++语言的各种优点，还摒弃了C++里难以理解的多继承、指针等概念，因此Java语言具有功能强大和简单易用两个特征。Java语言作为静态面向对象编程语言的代表，极好地实现了面向对象理论，允许程序员以优雅的思维方式进行复杂的编程。Java具有简单性、面向对象、分布式、健壮性、安全性、平台独立与可移植性、多线程、动态性等特点。Java可以编写桌面应用程序、Web应用程序、分布式系统和嵌入式系统应用程序等。编程环境Java概念图JDK（Java Development Kit）称为Java开发包或Java开发工具，是一个编写Java的Applet小程序和应用程序的程序开发环境。JDK是整个Java的核心，包括了Java运行环境（Java Runtime Envirnment），一些Java工具和Java的核心类库（Java API）。不论什么Java应用服务器实质都是内置了某个版本的JDK。主流的JDK是Sun公司发布的JDK，除了Sun之外，还有很多公司和组织都开发了自己的JDK，例如，IBM公司开发的JDK，BEA公司的Jrocket，还有GNU组织开发的JDK。另外，可以把Java API类库中的Java SE API子集和Java虚拟机这两部分统称为JRE（JAVA Runtime Environment），JRE是支持Java程序运行的标准环境。JRE是个运行环境，JDK是个开发环境。因此写Java程序的时候需要JDK，而运行Java程序的时候就需要JRE。而JDK里面已经包含了JRE，因此只要安装了JDK，就可以编辑Java程序，也可以正常运行Java程序。但由于JDK包含了许多与运行无关的内容，占用的空间较大，因此运行普通的Java程序无须安装JDK，而只需要安装JRE即可。编程工具Eclipse：一个开放源代码的、基于Java的可扩展开发平台。NetBeans：开放源码的Java集成开发环境，适用于各种客户机和Web应用。IntelliJ IDEA：在代码自动提示、代码分析等方面的具有很好的功能。MyEclipse：由Genuitec公司开发的一款商业化软件，是应用比较广泛的Java应用程序集成开发环境。EditPlus：如果正确配置Java的编译器“Javac”以及解释器“Java”后，可直接使用EditPlus编译执行Java程序。1.简单性Java看起来设计得很像C++，但是为了使语言小和容易熟悉，设计者们把C++语言中许多可用的特征去掉了，这些特征是一般程序员很少使用的。例如，Java不支持go to语句，代之以提供break和continue语句以及异常处理。Java还剔除了C++的操作符过载（overload）和多继承特征，并且不使用主文件，免去了预处理程序。因为Java没有结构，数组和串都是对象，所以不需要指针。Java能够自动处理对象的引用和间接引用，实现自动的无用单元收集，使用户不必为存储管理问题烦恼，能更多的时间和精力花在研发上。2.面向对象Java是一个面向对象的语言。对程序员来说，这意味着要注意应中的数据和操纵数据的方法（method），而不是严格地用过程来思考。在一个面向对象的系统中，类（class）是数据和操作数据的方法的集合。数据和方法一起描述对象（object）的状态和行为。每一对象是其状态和行为的封装。类是按一定体系和层次安排的，使得子类可以从超类继承行为。在这个类层次体系中有一个根类，它是具有一般行为的类。Java程序是用类来组织的。Java还包括一个类的扩展集合，分别组成各种程序包（Package），用户可以在自己的程序中使用。例如，Java提供产生图形用户接口部件的类（java.awt包），这里awt是抽象窗口工具集（abstract windowing toolkit）的缩写，处理输入输出的类（java.io包）和支持网络功能的类（java.net包）。3.分布性Java设计成支持在网络上应用，它是分布式语言。Java既支持各种层次的网络连接，又以Socket类支持可靠的流（stream）网络连接，所以用户可以产生分布式的客户机和服务器。网络变成软件应用的分布运载工具。Java程序只要编写一次，就可到处运行。4.编译和解释性Java编译程序生成字节码（byte-code），而不是通常的机器码。Java字节码提供对体系结构中性的目标文件格式，代码设计成可有效地传送程序到多个平台。Java程序可以在任何实现了Java解释程序和运行系统（run-time system）的系统上运行。在一个解释性的环境中，程序开发的标准“链接”阶段大大消失了。如果说Java还有一个链接阶段，它只是把新类装进环境的过程，它是增量式的、轻量级的过程。因此，Java支持快速原型和容易试验，它将导致快速程序开发。这是一个与传统的、耗时的“编译、链接和测试”形成鲜明对比的精巧的开发过程。5.稳健性JavaJava原来是用作编写消费类家用电子产品软件的语言，所以它是被设计成写高可靠和稳健软件的。Java消除了某些编程错误，使得用它写可靠软件相当容易。Java是一个强类型语言，它允许扩展编译时检查潜在类型不匹配问题的功能。Java要求显式的方法声明，它不支持C风格的隐式声明。这些严格的要求保证编译程序能捕捉调用错误，这就导致更可靠的程序。可靠性方面最重要的增强之一是Java的存储模型。Java不支持指针，它消除重写存储和讹误数据的可能性。类似地，Java自动的“无用单元收集”预防存储漏泄和其它有关动态存储分配和解除分配的有害错误。Java解释程序也执行许多运行时的检查，诸如验证所有数组和串访问是否在界限之内。异常处理是Java中使得程序更稳健的另一个特征。异常是某种类似于错误的异常条件出现的信号。使用try/catch/finally语句，程序员可以找到出错的处理代码，这就简化了出错处理和恢复的任务。6.安全性Java的存储分配模型是它防御恶意代码的主要方法之一。Java没有指针，所以程序员不能得到隐蔽起来的内幕和伪造指针去指向存储器。更重要的是，Java编译程序不处理存储安排决策，所以程序员不能通过查看声明去猜测类的实际存储安排。编译的Java代码中的存储引用在运行时由Java解释程序决定实际存储地址。Java运行系统使用字节码验证过程来保证装载到网络上的代码不违背任何Java语言限制。这个安全机制部分包括类如何从网上装载。例如，装载的类是放在分开的名字空间而不是局部类，预防恶意的小应用程序用它自己的版本来代替标准Java类。7.可移植性Java使得语言声明不依赖于实现的方面。例如，Java显式说明每个基本数据类型的大小和它的运算行为（这些数据类型由Java语法描述）。Java环境本身对新的硬件平台和操作系统是可移植的。Java编译程序也用Java编写，而Java运行系统用ANSIC语言编写。8.高性能Java是一种先编译后解释的语言，所以它不如全编译性语言快。但是有些情况下性能是很要紧的，为了支持这些情况，Java设计者制作了“及时”编译程序，它能在运行时把Java字节码翻译成特定CPU（中央处理器）的机器代码，也就是实现全编译了。Java字节码格式设计时考虑到这些“及时”编译程序的需要，所以生成机器代码的过程相当简单，它能产生相当好的代码。9.多线索性Java是多线索语言，它提供支持多线索的执行（也称为轻便过程），能处理不同任务，使具有线索的程序设计很容易。Java的lang包提供一个Thread类，它支持开始线索、运行线索、停止线索和检查线索状态的方法。Java的线索支持也包括一组同步原语。这些原语是基于监督程序和条件变量风范，由C.A.R.Haore开发的广泛使用的同步化方案。用关键词synchronized，程序员可以说明某些方法在一个类中不能并发地运行。这些方法在监督程序控制之下，确保变量维持在一个一致的状态。10.动态性Java语言设计成适应于变化的环境，它是一个动态的语言。例如，Java中的类是根据需要载入的，甚至有些是通过网络获取的。', '1g2P02371120181219IFrO');
INSERT INTO `user_article` VALUES ('9', '123456', '1', '2018-12-21 02:03:13', '文章test -test', '又又又又发表文章啦1545328581101082027.txt1545328581099012582.jpg1545328581104086055.zip', '9t7402031320181221TbNg');
INSERT INTO `user_article` VALUES ('10', '123456', '1', '2018-12-21 02:08:00', 'ZZZZZZZZZZZZZZZZZZZZ', 'dddZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ', 'nP9802080020181221nPpb');
INSERT INTO `user_article` VALUES ('11', '123456', '1', '2018-12-21 02:11:32', '？？？？', '', '4B5x02113220181221CsZw');
INSERT INTO `user_article` VALUES ('12', '123456', '1', '2018-12-21 02:14:54', 'ddddddd', 'ddddddddd123 ', 'IDUG02145420181221HPlW');
INSERT INTO `user_article` VALUES ('13', '123456', '1', '2018-12-21 02:16:41', 'Java', '视频', '49SE02164120181221NPjb');
INSERT INTO `user_article` VALUES ('14', '123456', '1', '2018-12-21 02:18:48', '视频', '？？？？？', '9Vgv02184820181221IbMJ');
INSERT INTO `user_article` VALUES ('15', '123456', '1', '2018-12-24 18:34:01', 'MyEclipse', '基本含义MyEclipse企业级工作平台（MyEclipseEnterprise Workbench ，简称MyEclipse）是对EclipseIDE的扩展，利用它我们可以在数据库和JavaEE的开发、发布以及应用程序服务器的整合方面极大的提高工作效率。它是功能丰富的JavaEE集成开发环境，包括了完备的编码、调试、测试和发布功能，完整支持HTML，Struts，JSP，CSS，Javascript，Spring，SQL，Hibernate [1] 。MyEclipse 是一个十分优秀的用于开发Java, J2EE的 Eclipse 插件集合，MyEclipse的功能非常强大，支持也十分广泛，尤其是对各种开源产品的支持十分不错。MyEclipse可以支持Java Servlet，AJAX，JSP，JSF，Struts，Spring，Hibernate，EJB3，JDBC数据库链接工具等多项功能。可以说MyEclipse是几乎囊括了目前所有主流开源产品的专属eclipse开发工具。 [1] 分类在结构上，MyEclipse的特征可以被分为7类：1．JavaEE模型2．WEB开发工具3．EJB开发工具4．应用程序服务器的连接器5． JavaEE项目部署服务6．数据库服务7． MyEclipse整合帮助对于以上每一种功能上的类别，在Eclipse中都有相应的功能部件，并通过一系列的插件来实现它们。MyEclipse结构上的这种模块化，可以让我们在不影响其他模块的情况下，对任一模块进行单独的扩展和升级。MyEclipse的特征列表：基础特征（标准授权包含）原厂商维护与支持Java ServletsEJBJSP / ELJSTLJAXBJCAACPJSR 286 (Portlets)Web FragmentsHTML5可视化设计JQuery Mobile Palette支持Spring FrameworkJS编辑器CSS编辑器JAX-WSStrutsStruts 1 & 2可视化设计JSFJSF可视化设计ICEfacesSpring Web FlowWTPJPAHibernateDatabase工具Visual MySQL Query BuilderSync-On-Demand Deployment30+ Application Server ConnectorsEmbedded Tomcat ServerEmbedded Derby Server专业特征（专业授权包含）支持PhoneGap APIJQuery Mobile TemplatesPhoneGap Build ServicesMobile Web Simulator支持iOS & AndroidAJAX工具图像编辑器JAX-RS (REST)UML 1 & 2 ModelingMaven：项目导入、完全支持JEE、高级依赖管理、构建 & 部署支持扩展数据库：Oracle、MySQL、Microsoft SQLServer、Sybase ConnectorsMyEclipse Java Profiler企业级报表高级WebSphere特征（Blue和Bling授权包含）WAS服务器连接器，版本 6.1 – 8.5Portal服务器连接器，版本 6.1 – 8.5即时部署RAD项目支持和迁移WebSphere JAX-WS & JAX-RPC Web ServicesLiberty Profile高级Spring Scaffolding （Spring和Bling授权包含）Quick Scaffolding：Spring MVC、GWT、Flex、iPhone、Spring Web FlowSpring Project Bootstrapping简单而言，MyEclipse是Eclipse的插件，也是一款功能强大的JavaEE集成开发环境，支持代码编写、配置、测试以及除错，MyEclipse5.5以前版本需先安装Eclipse。MyEclipse5.5以后版本安装时不需安装Eclipse。快捷键    MyEclipse 快捷键1(CTRL)Ctrl+1 快速修复　　Ctrl+L 定位在某行　　Ctrl+O 快速显示 OutLine　　Ctrl+T 快速显示当前类的继承结构　　Ctrl+W 关闭当前Editer　　Ctrl+K 快速定位到下一个　　Ctrl+E 快速显示当前Editer的下拉列表　　Ctrl+J 正向增量查找(按下Ctrl+J后,你所输入的每个字母编辑器都提供快速匹配定位到某个单词,如果没有,则在stutes line中显示没有找到了,)　　Ctrl+Z 返回到修改前的状态　　Ctrl+Y 与上面的操作相反　　Ctrl+/ 注释当前行,再按则取消注释　　Ctrl+D 删除当前行　　Ctrl+Q 定位到最后一次编辑处　　Ctrl+M 切换窗口的大小　　Ctrl+I 格式化激活的元素Format Active Elements。　　Ctrl+F6 切换到下一个Editor　　Ctrl+F7 切换到下一个Perspective　　Ctrl+F8 切换到下一个ViewMyEclipse 快捷键2(CTRL+SHIFT)Ctrl+Shift+E 显示管理当前打开的所有的View的管理器(可以选择关闭,激活等操作)　　Ctrl+Shift+/ 自动注释代码　　Ctrl+Shift+\\自动取消已经注释的代码　　Ctrl+Shift+O 自动引导类包　　Ctrl+Shift+J 反向增量查找(和上条相同,只不过是从后往前查)　　Ctrl+Shift+F4 关闭所有打开的Editer　　Ctrl+Shift+X 把当前选中的文本全部变为大写　　Ctrl+Shift+Y 把当前选中的文本全部变为小写　　Ctrl+Shift+F 格式化当前代码　　Ctrl+Shift+M(先把光标放在需导入包的类名上) 作用是加Import语句　　Ctrl+Shift+P 定位到对于的匹配符(譬如{}) (从前面定位后面时,光标要在匹配符里面,后面到前面,则反之)　　Ctrl+Shift+F格式化文件Format Document。　　Ctrl+Shift+O作用是缺少的Import语句被加入，多余的Import语句被删除。　　Ctrl+Shift+S保存所有未保存的文件。　　Ctrl+Shift+/ 在代码窗口中是这种/*~*/注释，在JSP文件窗口中是 <!--~-->。　　Shift+Ctrl+Enter 在当前行插入空行(原理同上条)MyEclipse 快捷键3(ALT)Alt+/ 代码助手完成一些代码的插入 ，自动显示提示信息　　Alt+↓ 当前行和下面一行交互位置(特别实用,可以省去先剪切,再粘贴了)　　Alt+↑ 当前行和上面一行交互位置(同上)　　Alt+← 前一个编辑的页面　　Alt+？帮助　　Alt+→ 下一个编辑的页面(当然是针对上面那条来说了)　　Alt+Enter 显示当前选择资源(工程,or 文件 or文件)的属性　　MyEclipse 快捷键4(ALT+CTRL)　　Alt+CTRL+↓ 复制当前行到下一行(复制增加)　　Alt+CTRL+↑ 复制当前行到上一行(复制增加)MyEclipse 快捷键5(ALT+SHIFT)Alt+Shift+R 重命名　　Alt+Shift+M 抽取方法　　Alt+Shift+C 修改函数结构(比较实用,有N个函数调用了这个方法,修改一次搞定)　　Alt+Shift+L 抽取本地变量　　Alt+Shift+F 把Class中的local变量变为field变量　　Alt+Shift+I 合并变量　　Alt+Shift+V 移动函数和变量　　Alt+Shift+Z 重构的后悔药(Undo) Shift+Enter 在当前行的下一行插入空行(这时鼠标可以在当前行的任一位置,不一定是最后)　　Alt+Shift+O(或点击工具栏中的Toggle Mark Occurrences按钮) 当点击某个标记时可使本页面中其他地方的此标记黄色凸显，并且窗口的右边框会出现白色的方块，点击此方块会跳到此标记处。MyEclipse 快捷键6下面的快捷键是重构里面常用的(注:一般重构的快捷键都是Alt+Shift开头的了)　　F2当鼠标放在一个标记处出现Tooltip时候按F2则把鼠标移开时Tooltip还会显示即Show Tooltip Description。　　F3跳到声明或定义的地方。　　F5单步调试进入函数内部。　　F6单步调试不进入函数内部，如果装了金山词霸2006则要把“取词开关”的快捷键改成其他的。　　F7由函数内部返回到调用处。　　F8一直执行到下一个断点。 [2] 配置开发MyEclipse打开,新建项目，保证mysql和tomcat服务能够正常启动，项目才可以正常运行。下面就要开始真正的开始部署一个传说中的tomcat+struts+hibernate+mysql结构的工程了。首先，在myeclipse里新建一个工程。在左边的Package Exporler面版里点右键选择new->；project…在跳出菜单里选择MyEclipse->；J2EEProjects->；WebProject。点击next后进入如下画面：图1（图1） 按以上图示输入相关字段后点击Finish便建立了一个数据库连接，在新出现的JDBCforMysql上点右键，选择Openconnection，确认用户名和密码正确后点OK，如果一切顺利的话你会看到下面的画面：（图2） 这说明你已经和数据库建立了正确的连接。现在再回到window->；OpenPerspective->；Other…里的MyEclipse，也就是刚进来的时候看到的画面。右键点击你刚建立的工程test并选择MyEclipse->；AddstrutsCapabilities…在跳出的菜单里按照如下输入并确定：（图3） 现在你已经为你的工程增加了struts，接下来和上面一样在右键工程后选择MyEclipse->；AddHibernateCapabilities…一路确定下来为你的工程添加Hibernate。图3（为方便起见在选择路径时把HibernateSessionFactory.java放在了src/com下面，其实最好建立个单独的目录如src/com/hibernate）为了更好的演示不建立通常的登陆页面而是建立个注册页面。选择src目录下的hibernate.cfg.xml文件。照如下填写并保存。这样hibernate就为你建立了数据库的连接池。下面再选择WebRoot/WEB-INF/struts-config.xml文件，在画面中点击右键选择new->；Form，ActionandJSP。如下填写：（图4） 再选择JSP选项，如下：图5（图5） 最后选择Finish。再新建一个success.jsp的页面，在刚才struts-config.xml文件里右键选择addAdmin选择Properties，在菜单里选择Forwords，再点add，如下图填写：（图6） 最后你的struts-config.xml就是下面这个样子：（图7） 下面转到hibernate。换到刚才建立数据库的页面，选择你的admin的表点右键选择CreateHibernateMapping。选择好打包路径后选择Finish。如图：（图8） 在你刚才选择的路径下，下新建立的文件AdminDAOFactory.java文件并输入以下内容：packagecom.yourcompanyname；importjava.util.Iterator；importorg.hibernate.HibernateException；importorg.hibernate.Query；importorg.hibernate.Session；importorg.hibernate.Transaction；importcom.hibernate.SessionFactory；publicclassAdminDAOFactory{Sessionsession；Transactiontx；publicvoidadd(Adminadmin)throwsHibernateException{/**图10*CreationDate:11-17-2005*TODOAddanewadminuser.*@paramAnobjectofAdmin*@returnvoid*@authorCoderGuo*/try{session=SessionFactory.currentSession()；tx=session.beginTransaction()；//Addanewadminsession.save(admin)；tx.commit()；}catch(HibernateExceptione){throwe；}finally{if(tx!=null){tx.rollback()；}图11SessionFactory.closeSession()；}}} 再打开com.yourcompany.struts.action下的AddAdminAction.java添加（其中如果有错误选中好按ctrl+shift+o自动添加包）publicclassAddAdminActionextendsAction{//---------------------------------------------------------InstanceVariables//---------------------------------------------------------Methods/***Methodexecute*@parammapping*@paramform*@paramrequest*@paramresponse*@returnActionForward*@authorCoderGuo*/publicActionForwardexecute(ActionMappingmapping，ActionFormform，HttpServletRequestrequest，HttpServletResponseresponse){AddAdminFormaddAdminForm=(AddAdminForm)form；//TODOAddanewadminAdminadmin=newAdmin()；admin.setName(addAdminForm.getName())；admin.setPassword(addAdminForm.getPassword())；AdminDAOFactoryadminDAO=newAdminDAOFactory()；adminDAO.add(admin)；returnmapping.findForward(\"success\")；}}再打开com.yourcompanyname.struts.form下的AddAdminForm.java，修改（如果有错误按照上面说的方法导入包）publicActionErrorsvalidate(ActionMappingmapping，HttpServletRequestrequest){//TODOAuto-generatedmethodstubActionErrorserrors=newActionErrors()；Sessionsession=SessionFactory.currentSession()；Transactiontx=session.beginTransaction()；Queryquery=session.createQueryIteratorit=query.iterate()；if(it.hasNext()){errors.add(\"addAdmin\"，newActionMessage(\"form.addAdmin.\"))；}tx.commit()；SessionFactory.closeSession()；returnerrors；}publicvoidreset(ActionMappingmapping，HttpServletRequestrequest){//TODOAuto-generatedmethodstub=null；this.password=null；}图12再打开com\\yourcompanyname\\struts下的ApplicationResource.properties在这里面添加错误信息：Form.addAdmin.=err 配置好myeclipse于tomcat的连接。在window->；Preferences做如下设定：在项目文件点右键－>；“myeclipse”－>；“Addandremoveprojectdeployment”，如下图：配置工作基本结束了，在myeclipse上开启tomcat服务现在打开浏览器，输入网址就可以看到jsp页面。', '5Coa18340120181224RzUp');
INSERT INTO `user_article` VALUES ('16', '123456', '1', '2019-01-02 15:53:21', 'UEditor', 'Get StartedUEditor 介绍UEditor 是由百度「FEX前端研发团队」开发的所见即所得富文本web编辑器，具有轻量，可定制，注重用户体验等特点，开源基于MIT协议，允许自由使用和修改代码。1 入门部署和体验1.1 下载编辑器到官网下载 UEditor 最新版：[官网地址]1.2 创建demo文件解压下载的包，在解压后的目录创建 demo.html 文件，填入下面的html代码                                        1.3 在浏览器打开demo.html如果看到了下面这样的编辑器，恭喜你，初次部署成功！1.4 传入自定义的参数编辑器有很多可自定义的参数项，在实例化的时候可以传入给编辑器：var ue = UE.getEditor(\'container\', {    autoHeight: false});配置项也可以通过 ueditor.config.js 文件修改，具体的配置方法请看前端配置项说明1.5 设置和读取编辑器的内容通 getContent 和 setContent 方法可以设置和读取编辑器的内容var ue = UE.getContent();//对编辑器的操作最好在编辑器ready之后再做ue.ready(function() {    //设置编辑器的内容    ue.setContent(\'hello\');    //获取html内容，返回: \r\nhello\r\n   var html = ue.getContent();    //获取纯文本内容，返回: hello    var txt = ue.getContentTxt();});UEditor 的更多API请看API 文档2 详细文档UEditor 官网：http://ueditor.baidu.comUEditor API 文档：http://ueditor.baidu.com/docUEditor Github 地址：http://github.com/fex-team/ueditor后端部署说明声明：UEditor 提供的后端代码仅作为 demo，正式部署需要自行实现或者修改例子代码，尤其注意改成有用户权限控制的后台。ueditor 开发组所在的 FEX 团队是一个前端团队，我们有一流的前端技术，但后端实力较欠缺，我们尽力为用户提供更健壮的后台，但不免会产生各种 bug ，若遇到了问题，望能到 github issue 页面提供复现信息或者解决方案。文档说明支持版本：支持 UEditor 1.4.2+ 的版本当前文档的例子是按照 php 后台介绍，其中的配置项以 图片上传 为例介绍，其他上传配置方法类似。1 部署说明UEditor 在静态服务器下，也可以正常加载到容器上，但是上传图片等后台相关的功能是不可以使用的，需要有后台语言支持才能正常使用。1.1 选择后台语言UEditor 提供了四种后台语言 php，asp，asp.net，jsp，你可以选择你熟悉的语言部署到你的服务器，本文后面以php为例子介绍。当前文档介绍的是通用的后台配置方法，具体的配置，还需要移步各后台的使用说明：php：PHP 使用说明asp：ASP 使用说明asp.net：AST.NET 使用说明jsp：JSP 使用说明1.2 配置 serverUrl 参数UEditor 1.4.2+ 起，推荐使用统一的请求路径，在你部署好前端代码后，你需要修改 ueditor.config.js 里的 serverUrl参数，改成 URL + \'php/controller.php\'上面的值', '2n0315532120190102KOUz');
INSERT INTO `user_article` VALUES ('17', '123456', '1', '2019-01-02 17:30:45', 'javascript', 'javascript JavaScript一种直译式脚本语言，是一种动态类型、弱类型、基于原型的语言，内置支持类型。它的解释器被称为JavaScript引擎，为浏览器的一部分，广泛用于客户端的脚本语言，最早是在HTML（标准通用标记语言下的一个应用）网页上使用，用来给HTML网页增加动态功能。在1995年时，由Netscape公司的Brendan Eich，在网景导航者浏览器上首次设计实现而成。因为Netscape与Sun合作，Netscape管理层希望它外观看起来像Java，因此取名为JavaScript。但实际上它的语法风格与Self及Scheme较为接近。 [1] 为了取得技术优势，微软推出了JScript，CEnvi推出ScriptEase，与JavaScript同样可在浏览器上运行。为了统一规格，因为JavaScript兼容于ECMA标准，因此也称为ECMAScript。组成部分目录1 组成部分2 基本特点3 日常用途4 历史5 特性6 编程7 版本8 比较ECMAScript，描述了该语javascript组成言的语法和基本对象。 [2] 文档对象模型（DOM），描述处理网', 'vq3P17304520190102FJRa');

-- ----------------------------
-- Table structure for `user_collection`
-- ----------------------------
DROP TABLE IF EXISTS `user_collection`;
CREATE TABLE `user_collection` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '订阅id(自增)',
  `article_content_id` varchar(30) NOT NULL COMMENT '鏂囩珷id',
  `collection_writer_id` int(10) NOT NULL,
  `collection_state` enum('0','1') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '0' COMMENT '订阅状态 0：没订阅  1：已订阅',
  `collection_update_time` timestamp NULL DEFAULT NULL COMMENT '璁㈤槄鏇存柊鏃堕棿',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=19 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of user_collection
-- ----------------------------
INSERT INTO `user_collection` VALUES ('1', '1g2P02371120181219IFrO', '123456', '1', '2018-12-22 04:25:16');
INSERT INTO `user_collection` VALUES ('4', 'IDUG02145420181221HPlW', '123456', '1', '2018-12-31 16:48:03');
INSERT INTO `user_collection` VALUES ('5', '1g2P02371120181219IFrO', '123473', '1', '2018-12-22 04:58:09');
INSERT INTO `user_collection` VALUES ('6', 'lx0V02242320181219focV', '123456', '1', '2018-12-22 05:56:43');
INSERT INTO `user_collection` VALUES ('7', 'd60A02132820181219rNEK', '123456', '1', '2018-12-22 13:30:47');
INSERT INTO `user_collection` VALUES ('8', '5Coa18340120181224RzUp', '123456', '1', '2018-12-24 18:34:48');
INSERT INTO `user_collection` VALUES ('9', '9Vgv02184820181221IbMJ', '123456', '1', '2018-12-31 16:47:52');
INSERT INTO `user_collection` VALUES ('10', '49SE02164120181221NPjb', '123456', '1', '2018-12-31 16:47:57');
INSERT INTO `user_collection` VALUES ('11', '4B5x02113220181221CsZw', '123456', '1', '2018-12-31 16:48:09');
INSERT INTO `user_collection` VALUES ('12', 'nP9802080020181221nPpb', '123456', '1', '2018-12-31 16:48:16');
INSERT INTO `user_collection` VALUES ('13', '9t7402031320181221TbNg', '123456', '1', '2018-12-31 16:48:24');
INSERT INTO `user_collection` VALUES ('14', '475R02213520181219vTNL', '123456', '1', '2018-12-31 16:48:52');
INSERT INTO `user_collection` VALUES ('15', '8SUK21260820181214eiGr', '123456', '1', '2018-12-31 16:49:06');
INSERT INTO `user_collection` VALUES ('16', 'VE5602025620181219KmvN', '123456', '1', '2018-12-31 16:49:59');
INSERT INTO `user_collection` VALUES ('17', '2n0315532120190102KOUz', '123456', '1', '2019-01-02 17:21:52');
INSERT INTO `user_collection` VALUES ('18', 'vq3P17304520190102FJRa', '123456', '1', '2019-01-02 17:31:53');

-- ----------------------------
-- Table structure for `user_info`
-- ----------------------------
DROP TABLE IF EXISTS `user_info`;
CREATE TABLE `user_info` (
  `user_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `user_num` varchar(20) NOT NULL,
  `user_name` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '用户名',
  `sex` enum('0','2','1') CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT '0' COMMENT '性别',
  `user_logo` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '头像',
  `email` varchar(45) DEFAULT NULL COMMENT '邮箱',
  `telephone` varchar(20) DEFAULT NULL COMMENT '电话',
  `address_now` varchar(60) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '居住地',
  `address_home` varchar(60) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '家乡地址',
  `educational` varchar(20) DEFAULT NULL COMMENT '教育程度',
  `job` varchar(60) DEFAULT NULL COMMENT '职业/工作',
  `hobby` varchar(45) DEFAULT NULL COMMENT '兴趣/爱好',
  `birthday` varchar(45) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '生日',
  `introduce` varchar(100) DEFAULT NULL,
  `register_time` timestamp NOT NULL COMMENT '注册时间',
  `login_last_time` timestamp NULL DEFAULT NULL COMMENT '最后一次登录时间',
  `update_last_time` timestamp NULL DEFAULT NULL COMMENT '最后一次更新时间',
  PRIMARY KEY (`user_id`)
) ENGINE=InnoDB AUTO_INCREMENT=123476 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of user_info
-- ----------------------------
INSERT INTO `user_info` VALUES ('123456', 'admin', '管理员', '0', '/lzxBlog/page/img/user_logo/custom/123456/20190102EDhP.png', '1234567@qq.com', '+8612345679810', '广东省-广州市-番禺区&*&440000-440100-440113', '详细地址1', '学历1', '学生1', '兴趣爱好1', '2018-5-20', '简介', '2018-10-31 20:43:23', '2019-01-02 23:44:56', '2019-01-02 17:30:45');
INSERT INTO `user_info` VALUES ('123457', 'mytest', 'mytest', '0', '/lzxBlog/page/img/user_logo/default/userLogo.png', null, null, null, null, null, null, null, null, null, '2018-10-31 20:48:03', null, null);
INSERT INTO `user_info` VALUES ('123458', 'test2', '账号1233', '1', '/lzxBlog/page/img/user_logo/custom/123458/20181231zYrP.png', 'ui', 'ui', '河北省-石家庄市-高邑县&*&130000-130100-130127', 'uiou', 'ui', 'ui', 'ui', '2012-4-5', null, '2018-10-31 21:00:01', '2018-12-31 16:42:11', null);
INSERT INTO `user_info` VALUES ('123459', '235635', '235635', '0', '/lzxBlog/page/img/user_logo/default/userLogo.png', null, null, null, null, null, null, null, null, null, '2018-10-31 21:00:54', '2018-12-25 02:04:35', null);
INSERT INTO `user_info` VALUES ('123472', 'adfddf', 'adfddf', '0', '/lzxBlog/page/img/user_logo/default/userLogo.png', null, null, null, null, null, null, null, null, null, '2018-11-19 23:09:31', '2018-12-25 01:49:33', null);
INSERT INTO `user_info` VALUES ('123473', 'admin123', 'admin123', '0', '/lzxBlog/page/img/user_logo/default/userLogo.png', null, null, null, null, null, null, null, null, null, '2018-11-19 23:20:27', '2018-12-24 18:59:30', null);
INSERT INTO `user_info` VALUES ('123474', 'admin1234', 'admin1234', '0', '/lzxBlog/page/img/user_logo/default/userLogo.png', null, null, null, null, null, null, null, null, null, '2018-11-21 13:22:20', '2018-12-24 18:59:17', null);
INSERT INTO `user_info` VALUES ('123475', 'test33', 'test33', '0', '/lzxBlog/page/img/user_logo/default/userLogo.png', null, null, null, null, null, null, null, null, null, '2018-12-19 02:35:44', '2018-12-19 02:36:22', null);

-- ----------------------------
-- Table structure for `user_info_bgimg`
-- ----------------------------
DROP TABLE IF EXISTS `user_info_bgimg`;
CREATE TABLE `user_info_bgimg` (
  `id` int(10) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `user_id` int(10) NOT NULL COMMENT '用户id',
  `bgimg` varchar(45) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL COMMENT '背景图片文件名',
  `change_time` timestamp NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT '更改时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of user_info_bgimg
-- ----------------------------

-- ----------------------------
-- Table structure for `user_key`
-- ----------------------------
DROP TABLE IF EXISTS `user_key`;
CREATE TABLE `user_key` (
  `user_id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'ÓÃ»§ID',
  `user_num` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `user_password` varchar(45) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `role` enum('user','ban','admin') CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT 'user',
  PRIMARY KEY (`user_id`)
) ENGINE=InnoDB AUTO_INCREMENT=123476 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of user_key
-- ----------------------------
INSERT INTO `user_key` VALUES ('123456', 'admin', 'admin123', 'admin');
INSERT INTO `user_key` VALUES ('123457', 'test', 'tesr123', 'user');
INSERT INTO `user_key` VALUES ('123458', 'test2', 'test123', 'user');
INSERT INTO `user_key` VALUES ('123459', '235635', '2344123', 'user');
INSERT INTO `user_key` VALUES ('123472', 'adfddf', '123123', 'user');
INSERT INTO `user_key` VALUES ('123473', 'admin123', '123123', 'user');
INSERT INTO `user_key` VALUES ('123474', 'admin1234', '123123', 'user');
INSERT INTO `user_key` VALUES ('123475', 'test33', '123123', 'user');

-- ----------------------------
-- Table structure for `user_relationship`
-- ----------------------------
DROP TABLE IF EXISTS `user_relationship`;
CREATE TABLE `user_relationship` (
  `id` int(10) NOT NULL AUTO_INCREMENT COMMENT '鐢ㄦ埛涔嬮棿鐨勫叧绯籭d(鑷)',
  `user_id1` int(10) NOT NULL COMMENT '1号 用户id',
  `user_id2` int(10) NOT NULL COMMENT '2号 用户id',
  `user_is_friend` enum('1','2','0') CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT '0' COMMENT '鏄惁涓哄ソ鍙?0锛氫笉鏄ソ鍙? 1锛氬ソ鍙嬪叧绯? 2锛氶粦鍚嶅崟',
  `friend_update_time` timestamp NULL DEFAULT NULL COMMENT '濂藉弸鍏崇郴鏇存柊鏃堕棿',
  `user_is_follow` enum('1','0') CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT '0' COMMENT '鏄惁鍏虫敞瀵规柟 0锛氭病鍏虫敞  1锛氬凡鍏虫敞',
  `follow_update_time` timestamp NULL DEFAULT NULL COMMENT '鍏虫敞鐨勬洿鏂版椂闂?',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of user_relationship
-- ----------------------------
INSERT INTO `user_relationship` VALUES ('1', '123456', '123475', null, null, '1', '2018-12-23 18:30:08');
INSERT INTO `user_relationship` VALUES ('2', '123456', '123474', null, null, '1', '2018-12-24 14:44:00');
INSERT INTO `user_relationship` VALUES ('3', '123456', '123458', null, null, '1', '2018-12-25 01:39:23');
INSERT INTO `user_relationship` VALUES ('4', '123458', '123456', null, null, '1', '2018-12-31 16:45:20');
DROP TRIGGER IF EXISTS `user_register`;
DELIMITER ;;
CREATE TRIGGER `user_register` AFTER INSERT ON `user_key` FOR EACH ROW BEGIN
     insert into `user_info`(user_id,user_num,user_name,register_time,user_logo) values(new.user_id,new.user_num,new.user_num,now(),'/lzxBlog/page/img/user_logo/default/userLogo.png'); 
END
;;
DELIMITER ;
